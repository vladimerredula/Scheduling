@model Leave

@{
    ViewData["Title"] = "User Leaves";

    var leaves = ViewBag.Leaves as List<Leave> ?? new List<Leave>();

    // Permissions
    var canAddLeave = _template.HasPermission("AddLeave");
    var canEditLeave = _template.HasPermission("EditLeave");
    var canCancelLeave = _template.HasPermission("CancelLeave");
    var canWithdrawLeave = _template.HasPermission("WithdrawLeave");
}

<div class="container">
    <h1>@ViewData["Title"]</h1>

    @if (canAddLeave)
    {
        <p class="mb-4">
            <a class="btn btn-primary shadow" onclick="addLeave()">Create New</a>
        </p>
    }

    <ul class="nav nav-tabs leavesTab" id="leavesTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link fs-5" id="pending-tab" data-bs-toggle="tab" data-bs-target="#content-pending" role="tab" aria-controls="0">Requests</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link fs-5" id="approved-tab" data-bs-toggle="tab" data-bs-target="#content-approved" role="tab" aria-controls="1">Approved</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link fs-5" id="denied-tab" data-bs-toggle="tab" data-bs-target="#content-denied" role="tab" aria-controls="2">Denied</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link fs-5" id="cancelled-tab" data-bs-toggle="tab" data-bs-target="#content-cancelled" role="tab" aria-controls="3">Cancelled</button>
        </li>
    </ul>
    <div class="tab-content rounded-bottom p-3 bg-white shadow-sm">
        <div class="tab-pane" id="content-pending" role="tabpanel" aria-labelledby="pending">
            <table class="datatable table table-hover">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Date_start)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Date_end)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Leave_type.Leave_type_name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th>
                            1st Approver
                        </th>
                        <th>
                            2nd Approver
                        </th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in leaves.Where(l => l.Status == "Pending"))
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date_start_string)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date_end_string)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Leave_type.Leave_type_name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @if (item?.Approver_1 != null)
                                {
                                    <i class="bi bi-check-circle text-success"></i> @Html.DisplayFor(modelItem => item.Approver1.Full_name)
                                }
                            </td>
                            <td>
                                @if (item?.Approver_2 != null)
                                {
                                    <i class="bi bi-check-circle text-success"></i> @Html.DisplayFor(modelItem => item.Approver2.Full_name)
                                }
                            </td>
                            <td class="text-nowrap align-content-center">
                                @if (canEditLeave)
                                {
                                    <a class="btn btn-sm btn-light border @(item?.Approver_1 != null ? "disabled" : "")" href="javascript:void(0)" onclick="editLeave(@item?.Leave_ID)">Edit</a>
                                }

                                @if (canCancelLeave)
                                {
                                    <a class="btn btn-sm btn-light border text-danger" href="javascript:void(0)" onclick="cancelLeave(@item?.Leave_ID)">Cancel</a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="tab-pane" id="content-approved" role="tabpanel" aria-labelledby="approved">
            <table class="datatable table table-hover">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Date_start)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Date_end)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Leave_type.Leave_type_name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th>
                            1st Approver
                        </th>
                        <th>
                            2nd Approver
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in leaves.Where(l => l.Status == "Approved"))
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date_start_string)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date_end_string)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Leave_type.Leave_type_name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Approver1.Full_name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Approver2.Full_name)
                            </td>
                            <td class="text-nowrap align-content-center">
                                @if (canWithdrawLeave && item?.Date_start > DateTime.Now)
                                {
                                    <a class="btn btn-sm btn-light border text-danger" href="javascript:void(0)" onclick="withdrawLeave(@item?.Leave_ID)">Request to withdraw</a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="tab-pane" id="content-denied" role="tabpanel" aria-labelledby="denied">
            <table class="datatable table table-hover">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Date_start)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Date_end)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Leave_type.Leave_type_name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th>
                            Denied by
                        </th>
                        <th>
                            Comment
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in leaves.Where(l => l.Status == "Denied"))
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date_start_string)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date_end_string)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Leave_type.Leave_type_name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            @if (item?.Approver_2 != null)
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.Approver2.Full_name)
                                </td>
                            }
                            else if (item?.Approver_1 != null)
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.Approver1.Full_name)
                                </td>
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.Comment)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="tab-pane" id="content-cancelled" role="tabpanel" aria-labelledby="cancelled">
            <table class="datatable table table-hover">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Date_start)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Date_end)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Leave_type.Leave_type_name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in leaves.Where(l => l.Status == "Cancelled" || l.Status == "Withdrawn"))
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date_start_string)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date_end_string)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Leave_type.Leave_type_name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Edit modal -->
<div class="modal fade" id="leaveModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="leaveModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="leaveForm" method="post">
                <div class="modal-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Leave_ID" />
                    <input type="hidden" asp-for="Personnel_ID" value="@leaves?.FirstOrDefault()?.Personnel_ID" />
                    <input type="hidden" asp-for="Status" />
                    <div class="row mb-3">
                        <div class="col">
                            <label asp-for="Leave_type_ID" class="form-label"></label><span class="text-danger" title="Required">*</span>
                            <select asp-for="Leave_type_ID" class="form-select" asp-items="ViewBag.LeaveTypes">
                                <option value="" selected disabled>Choose..</option>
                            </select>
                            <span asp-validation-for="Leave_type_ID" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <label asp-for="Date_start" class="form-label"></label><span class="text-danger" title="Required">*</span>
                            <input asp-for="Date_start" type="date" class="form-control" />
                            <span asp-validation-for="Date_start" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <label asp-for="Date_end" class="form-label"></label><span class="text-danger" title="Required">*</span>
                            <input asp-for="Date_end" type="date" class="form-control" />
                            <span asp-validation-for="Date_end" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <div class="form-group">
                        <a class="btn btn-link" href="javascript:void(0)" data-bs-dismiss="modal">Cancel</a>
                        <a href="javascript:void(0)" class="btn btn-primary" id="modalButton"></a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Cancel modal -->
<div class="modal fade" id="cancelModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="cancelModalLabel">Are you sure you want to cancel this leave?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <dl class="row">
                    <dt class="col-sm-3 text-end">
                        @Html.DisplayNameFor(model => model.Leave_type.Leave_type_name)
                    </dt>
                    <dd class="col-sm-9" id="cancel_leave_type_name">
                    </dd>
                    <dt class="col-sm-3 text-end">
                        @Html.DisplayNameFor(model => model.Date_start)
                    </dt>
                    <dd class="col-sm-9" id="cancel_date_start">
                    </dd>
                    <dt class="col-sm-3 text-end">
                        @Html.DisplayNameFor(model => model.Date_end)
                    </dt>
                    <dd class="col-sm-9" id="cancel_date_end">
                    </dd>
                </dl>
            </div>
            <div class="modal-footer border-0">
                <form asp-action="Cancel">
                    <input type="hidden" name="id" id="cancelID" />
                    <a class="btn btn-link" href="javascript:void(0)" data-bs-dismiss="modal">No</a>
                    <input type="submit" value="Yes, Cancel" class="btn btn-danger" />
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Withdraw modal -->
<div class="modal fade" id="withdrawModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="withdrawModalLabel">Request to withdraw this leave?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <dl class="row">
                    <dt class="col-sm-3">
                        @Html.DisplayNameFor(model => model.Leave_type.Leave_type_name)
                    </dt>
                    <dd class="col-sm-9" id="withdraw_leave_type_name">
                    </dd>
                    <dt class="col-sm-3">
                        @Html.DisplayNameFor(model => model.Date_start)
                    </dt>
                    <dd class="col-sm-9" id="withdraw_date_start">
                    </dd>
                    <dt class="col-sm-3">
                        @Html.DisplayNameFor(model => model.Date_end)
                    </dt>
                    <dd class="col-sm-9" id="withdraw_date_end">
                    </dd>
                </dl>
            </div>
            <div class="modal-footer border-0">
                <form asp-action="Withdraw">
                    <input type="hidden" name="id" id="withdrawID" />
                    <a class="btn btn-link" href="javascript:void(0)" data-bs-dismiss="modal">No</a>
                    <input type="submit" value="Yes, proceed" class="btn btn-danger" />
                </form>
            </div>
        </div>
    </div>
</div>

@if (Model != null)
{
    <input type="hidden" id="action" data-id="@Model.Leave_ID" value="@(Model.Leave_ID != 0 ? "edit" : "add")" />
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $("table.datatable").DataTable({
            responsive: true,
            fixedHeader: true
        });

        $(document).ready(function () {
            var action = $("#action");
            var actionVal = action.val();
            if (actionVal != null) {
                if (actionVal == "add") {
                    $(".modal-title").text("Add Leave");

                    $("#modalButton").text("Create");

                    $("#leaveForm").attr("action", "/Leave/Add");
                } else {
                    $(".modal-title").text("Edit Leave");

                    $("#modalButton").text("Update");

                    $("#leaveForm").attr("action", "/Leave/Edit/" + action.data("id"));
                }

                $("#leaveModal").modal("show");
            }

            var tabs = document.getElementsByClassName('nav nav-tabs')

            // Selecting all nav tabs and showing the first tab open
            for (var i = 0; i < tabs.length; i++) {
                var firstEl = tabs[i].querySelector('li:first-child button')
                if (firstEl == null) {
                    continue
                }
                var tab = new bootstrap.Tab(firstEl)
                tab.show()
            }

            $("#Date_start").on("click", function () {
                $(this)[0].showPicker();
            });

            $("#Date_start").on("change", function () {
                let startDateVal = new Date($(this).val());
                let endDate = $("#Date_end").val();

                if (endDate) {
                    let endDateVal = new Date(endDate);
                    if (endDateVal < startDateVal) {
                        $(this)
                            .closest("form")
                            .validate()
                            .showErrors({
                                "Date_start": "Start date cannot be later than the end date."
                            });
                        $(this).val("");
                    }
                } else {
                    $(this).blur();
                    $("#Date_end").focus();
                    $("#Date_end")[0].showPicker();
                }
            });

            $("#Date_end").on("click", function () {
                $(this)[0].showPicker();
            });

            $("#Date_end").on("change", function () {
                let endDateVal = new Date($(this).val());
                let startDate = $("#Date_start").val();

                if (startDate) {
                    let startDateVal = new Date(startDate);
                    if (endDateVal < startDateVal) {
                        $(this)
                            .closest("form")
                            .validate()
                            .showErrors({
                                "Date_end": "End date cannot be earlier than the start date."
                            });
                        $(this).val("");
                    }
                }
            });

            // Check for a hash in the URL and activate the corresponding tab
            var hash = window.location.hash.substring(1);
            if (hash) {
                activateTab(hash);

                // Add click event to tab links
                $('.leavesTab .nav-link').click(function (e) {
                    e.preventDefault();
                    var tabId = $(this).attr('href');
                    if (tabId != null) {
                        tabId = tabId.substring(1);
                        activateTab(tabId);
                        window.location.hash = tabId;
                    }
                });
            }
        });

        // Function to activate the tab
        function activateTab(tabId) {
            var tab = $('#' + tabId + '-tab');

            if (tab.length == 0) {
                return;
            }

            $('.nav-link').removeClass('active');
            $('.tab-pane').removeClass('show active');
            $('#' + tabId + '-tab').addClass('active');
            $('#content-' + tabId).addClass('show active');
        }

        $("#departmentId").on("change", function() {
            $("#changeDepartment").submit();
        });

        function addLeave() {
            $(".modal-title").text("Add Leave");

            $("#modalButton").text("Create");

            $("#leaveForm").attr("action", "/Leave/Add");

            clearModal();

            // Show the modal
            $("#leaveModal").modal("show");
        }

        function editLeave(id) {
            clearModal();

            $.ajax({
                url: "/Leave/GetLeave",
                type: "POST",
                data: {id: id},
                success: function (data) {
                    // Iterate over the properties of the data object and set the corresponding form field values
                    $.each(data, function (key, value) {
                        var elementId = key.charAt(0).toUpperCase() + key.slice(1); // Capitalize the first letter
                        $("#" + elementId).val(value);
                    });

                    // Set the action attribute of the form
                    $("#leaveForm").attr("action", "/Leave/Edit/" + data["leave_ID"]);
                    $("#leaveModalLabel").text("Edit leave");
                    $("#modalButton").text("Update");

                    // Show the modal
                    $("#leaveModal").modal("show");
                },
                error: function (response) {
                    console.error("Error:", response.status, response.responseJSON.message);
                    alert("Error: " + response.responseJSON.message);
                }
            });
        };

        function cancelLeave(id) {
            $.ajax({
                url: "/Leave/GetLeave",
                type: "POST",
                data: {id: id},
                success: function (data) {
                    // Iterate over the properties of the data object and set the corresponding form field values
                    $.each(data, function (key, value) {
                        var $element = $("#cancel_" + key);
                        if ($element.length) {
                            if (key == "date") {
                                $element.text(formatDate(value));
                            } else {
                                $element.text(value);
                            }
                        }
                    });

                    $("#cancelID").val(data["leave_ID"]);

                    // Show the modal
                    $("#cancelModal").modal("show");
                },
                error: function (response) {
                    console.error("Error:", response.status, response.responseJSON.message);
                    alert("Error: " + response.responseJSON.message);
                }
            });
        }

        function withdrawLeave(id) {
            $.ajax({
                url: "/Leave/GetLeave",
                type: "POST",
                data: {id: id},
                success: function (data) {
                    // Iterate over the properties of the data object and set the corresponding form field values
                    $.each(data, function (key, value) {
                        var $element = $("#withdraw_" + key);
                        if ($element.length) {
                            if (key == "date") {
                                $element.text(formatDate(value));
                            } else {
                                $element.text(value);
                            }
                        }
                    });

                    $("#withdrawID").val(data["leave_ID"]);

                    // Show the modal
                    $("#withdrawModal").modal("show");
                },
                error: function (response) {
                    console.error("Error:", response.status, response.responseJSON.message);
                    alert("Error: " + response.responseJSON.message);
                }
            });
        }

        $("#modalButton").on("click", function() {
            $("#leaveForm").submit();
        });

        function clearModal() {
            $('input[type="text"]').val('');
            $('input[type="date"]').val('');
            $('select').val('');
            // $('select').prop('selectedIndex', "");

            $(".validation-summary-errors").remove();
            $(".field-validation-error").text("");
        }

        function formatDate(dateString) {
            var date = new Date(dateString);
            var day = ("0" + date.getDate()).slice(-2);
            var month = ("0" + (date.getMonth() + 1)).slice(-2);
            var year = date.getFullYear();
            return year + "-" + month + "-" + day; // Format: YYYY/MM/DD
        }
    </script>
}
