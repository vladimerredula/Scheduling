@using System.Globalization;
@model (List<User> Users, List<Shift> Shifts, List<Schedule> Schedules, List<Leave> Leaves, List<Holiday> Holidays, List<Sector> Sectors, int month, int year)
@{
    ViewData["Title"] = "Manage Schedules";

    var departments = ViewBag.Departments as List<Department> ?? new List<Department>();
    var leaves = ViewBag.LeaveTypes as List<Leave_type> ?? new List<Leave_type>();
}

<div class="px-3 px-sm-5">
    <h2>@ViewData["Title"]</h2>

    <div class="row mb-3">
        <div class="col-10">
            <div class="row justify-content-between">
                <div class="col-auto">
                    <div class="row">
                        <div class="col-auto mb-2">
                            <label for="departmentId" class="form-label">Department</label>
                            <select name="departmentId" id="departmentId" class="form-select" asp-items="ViewBag.Departments">
                            </select>
                        </div>
                        <!-- Month Selection -->
                        <div class="col-auto mb-2">
                            <label for="monthSelect" class="form-label">Month</label>
                            <input type="text" class="form-control" id="monthPicker">
                        </div>
                    </div>
                </div>
                <div class="col-auto align-self-end">
                    <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#leaveModal">Apply leave</a>
                </div>
            </div>
        </div>
        <div class="col-2"></div>
    </div>

    <div class="row">
        <div class="col-12 col-xxl-10 mb-3">
            <!-- Table with Regular Members and Dates -->
            <div class="card p-3">
                <div id="loading-spinner" class="position-absolute top-50 start-50 z-3 d-none">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
                <div id="scheduleTable">
                    <partial name="_ScheduleTable" />
                </div>
            </div>
        </div>
        <div class="col-12 col-xxl-2">
            <div class="row mb-3">
                <div class="col col-md-6 col-xl-4 col-xxl-12 mb-3">
                    <div class="card p-4">
                        <small class="text-body-secondary mb-3">Leave applications</small>
                        <p><span class="bg-warning-subtle border border-2 border-warning rounded-1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;Pending</p>
                        <p><span class="bg-success-subtle border border-2 border-success rounded-1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;Approved by manager</p>
                        <small class="text-body-secondary mb-3">Reflected leaves</small>
                        <p><span class="bg-primary-subtle border border-2 border-primary-subtle rounded-1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> Business trip</p>
                        <p><span class="bg-info border border-2 border-info rounded-1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;Paid leave</p>
                        <p><span class="bg-primary border border-2 border-primary rounded-1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;Unpaid leave</p>
                        <p class="mb-0"><span class="bg-secondary border border-2 border-secondary rounded-1 opacity-75">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;Company holiday</p>
                    </div>
                </div>
                <div class="col col-md-6 col-xl-4 col-xxl-12 mb-3">
                    <div class="card py-2 px-4">
                        <table class="table table-sm text-center mb-3">
                            <thead>
                                <tr>
                                    <th colspan="2">4/2 pattern</th>
                                </tr>
                                <tr>
                                    <th>Shift</th>
                                    <th>Time</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>A</td>
                                    <td>7:15 - 16:45</td>
                                </tr>
                                <tr>
                                    <td>B</td>
                                    <td>12:45 - 22:15</td>
                                </tr>
                                <tr>
                                    <td>C</td>
                                    <td>22:00 - 7:30</td>
                                </tr>
                                <tr>
                                    <td>J</td>
                                    <td>09:00 - 18:00</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col col-md-6 col-xl-4 col-xxl-12 mb-3">
                    <div class="card py-2 px-4">
                        <table class="table table-sm text-center">
                            <thead>
                                <tr>
                                    <th colspan="2">5/2 pattern</th>
                                </tr>
                                <tr>
                                    <th>Shift</th>
                                    <th>Time</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>A*</td>
                                    <td>7:15 - 16:15</td>
                                </tr>
                                <tr>
                                    <td>B*</td>
                                    <td>13:15 - 22:15</td>
                                </tr>
                                <tr>
                                    <td>C*</td>
                                    <td>22:15 - 7:15</td>
                                </tr>
                                <tr>
                                    <td>J</td>
                                    <td>09:00 - 18:00</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Leave Modal -->
<div class="modal fade" id="leaveModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title">Assign leave</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-controller="Leave" asp-action="Apply">
                <div class="modal-body">
                        <div class="row mb-3">
                            <div class="col">
                                <label class="form-label">Leave type</label>
                                <select name="Leave_type_ID" id="Leave_type_ID" class="form-select">
                                    <option value="" disabled selected>Choose..</option>
                                    @foreach (var leave in leaves)
                                    {
                                        <option value="@leave.Leave_type_ID">@leave.Leave_type_name</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <label class="form-label">Start</label>
                                <input class="form-control" type="text" name="Date_start" id="Date_start" placeholder="mm/dd/yyyyy" />
                            </div>
                            <div class="col">
                                <label class="form-label">End</label>
                                <input class="form-control" type="text" name="Date_end" id="Date_end" placeholder="mm/dd/yyyyy" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <label>Comment</label>
                                <textarea name="comment" id="comment" class="form-control"></textarea>
                            </div>
                        </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Confirm</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Approve/deny leave Modal -->
<div class="modal fade" id="approveModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title">Leave application</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <dl class="row">
                    <dt class="col-sm-3 text-end">
                        Name
                    </dt>
                    <dd class="col-sm-9" id="name">
                    </dd>
                    <dt class="col-sm-3 text-end">
                        Leave type
                    </dt>
                    <dd class="col-sm-9" id="leaveType">
                    </dd>
                    <dt class="col-sm-3 text-end">
                        Date
                    </dt>
                    <dd class="col-sm-9" id="date">
                    </dd>
                </dl>
            </div>
            <div class="modal-footer border-0">
                <a class="btn btn-danger" id="denyBtn">Deny</a>
                <a class="btn btn-success" id="approveBtn">Approve</a>
            </div>
        </div>
    </div>
</div>

<!-- Reflect leave Modal -->
<div class="modal fade" id="reflectModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title">Leave application</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <dl class="row">
                    <dt class="col-sm-3 text-end">
                        Name
                    </dt>
                    <dd class="col-sm-9" id="name">
                    </dd>
                    <dt class="col-sm-3 text-end">
                        Leave type
                    </dt>
                    <dd class="col-sm-9" id="leaveType">
                    </dd>
                    <dt class="col-sm-3 text-end">
                        Date
                    </dt>
                    <dd class="col-sm-9" id="date">
                    </dd>
                    <dt class="col-sm-3 text-end">
                        Approved by
                    </dt>
                    <dd class="col-sm-9" id="approvedBy">
                    </dd>
                </dl>
            </div>
            <div class="modal-footer border-0">
                <a class="btn btn-danger">Mark as reflected</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // $.fn.bootstrapDP = $.fn.datepicker.noConflict();
        let cancelSort = false;
        let previousValue;

        $(document).ready(function (){
            $('[data-bs-toggle="tooltip"]').tooltip();

            $('#monthPicker').datepicker({
                format: "MM yyyy",
                minViewMode: 1,
                maxViewMode: 2,
                autoclose: true
            }).datepicker('setDate', new Date(@Model.year,@(Model.month - 1))).on("changeDate", function (e) {
                let selectedDate = e.date;
                let month = selectedDate.getMonth() + 1; // getMonth() returns month from 0 to 11
                let year = selectedDate.getFullYear(); 
                loadSchedule(month, year);
            });

            $("#Date_start").datepicker({
                format: "mm/dd/yyyy",
                orientation: "bottom auto",
                autoclose: true,
                todayHighlight: true
            }).on("changeDate", function (e) {
                let selectedDate = e.date;
                let endDate = $("#Date_end");
                if (endDate.val() == "") {
                    endDate.focus();
                }
            });

            $("#Date_end").datepicker({
                format: "mm/dd/yyyy",
                orientation: "bottom auto",
                autoclose: true,
                todayHighlight: true
            });

            initializeSortable(); // Initial call to initialize sortable functionality

            // ESC key handler to cancel drag
            $(document).on("keydown", function (e) {
              if (e.key === "Escape") {
                cancelSort = true;
              }
            });
        });

        $(document).on('focus', 'select', function () {
            previousValue = $(this).val(); // Store the current value
        });

        $("#departmentId").on("change", function () {
            let date = $('#monthPicker').datepicker("getDate");
            loadSchedule(date.getMonth() + 1, date.getFullYear());
        });

        $(document).on("click", "#prevBtn", function () {
            let $datepicker = $('#monthPicker');
            let currentDate = $datepicker.datepicker('getDate');

            if (currentDate) {
                let prevMonthDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1);
                $datepicker.datepicker('setDate', prevMonthDate);
                $datepicker.datepicker('update'); // Triggers changeDate event
            }
        });

        $(document).on("click", "#nextBtn", function () {
            let $datepicker = $('#monthPicker');
            let currentDate = $datepicker.datepicker('getDate');

            if (currentDate) {
                let nextMonthDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1);
                $datepicker.datepicker('setDate', nextMonthDate);
                $datepicker.datepicker('update'); // Triggers changeDate event
            }
        });

        function initializeSortable() {
            $(".sector").sortable({
                items: ".draggable",
                handle: ".drag-handle",
                cursor: "move",
                start: function (event, ui) {
                  cancelSort = false; // Reset flag on new drag
                },
                beforeStop: function (event, ui) {
                  if (cancelSort) {
                    $(this).sortable("cancel"); // Cancel the sort
                    cancelSort = false;
                  }
                },
                update: function (event, ui) {
                    let orders = $('.draggable').map(function () {
                        return this.id;
                    }).get().join(',');

                    let date = $('#monthPicker').datepicker("getDate");
                    let month = date.getMonth() + 1;
                    let year = date.getFullYear();

                    $.ajax({
                        url: '/Schedule/UpdateEmployeeOrder',
                        type: 'POST',
                        data: {
                            order: orders,
                            month: month,
                            year: year
                        },
                        success: function (response) {
                            if (!response.success) {
                                alert('Error updating row order!');
                            }
                        },
                        error: function () {
                            alert('An error occurred while updating the row order.');
                        }
                    });
                }
            }).disableSelection();
        }
        
        function showSpinner() {
            $("#loading-spinner").removeClass("d-none");
        }

        function hideSpinner() {
            $("#loading-spinner").addClass("d-none");
        }

        function loadSchedule(month, year) {
            let departmentId = $("#departmentId").val();

            showSpinner();
            $.ajax({
                url: '/Schedule/GetScheduleByMonth',
                type: 'GET',
                data: { 
                    month: month,
                    year: year,
                    departmentId: departmentId
                },
                success: function (response) {
                    $("#scheduleTable").html(response);
                    hideSpinner();
                    initializeSortable(); // Re-initialize sortable functionality
                },
                error: function () {
                    alert("Error loading schedule.");
                }
            });
        }

        function assignShift(userId, date, dropdown) {
            var shiftId = dropdown.value;

            // if  (shiftId == 999) {
            //     $.ajax({
            //         url: '/Leave/AssignCompanyLeave',
            //         type: 'POST',
            //         data: {
            //             userId: userId,
            //             date: date,
            //         },
            //         success: function (response) {
            //             if (!response.success) {
            //                 alert('Error assigning company holiday!');
            //             } else {
            //                 let cell = $(`#cell-${userId}-${date}`);
            //                 removeLeaveBg(cell);

            //                 cell.addClass("bg-secondary");
            //                 cell.find("select").blur();
            //                 cell.find("select").prop("disabled", true);
            //                 cell.find("select").val("0");
            //                 cell.find("p").removeClass("visually-hidden");

            //                 updateShiftCount(date);
            //             }
            //         },
            //         error: function () {
            //             alert('An error occurred while assigning the shift.');
            //         }
            //     });
            // } else {
                $.ajax({
                    url: '/Schedule/AssignShift',
                    type: 'POST',
                    data: {
                        userId: userId,
                        date: date,
                        shiftId: shiftId
                    },
                    success: function (response) {
                        if (!response.success) {
                            alert('Error assigning shift!');
                        } else {
                            let cell = $(`#cell-${userId}-${date}`);

                            if (shiftId == 999) {
                                cell.append(`
                                    <svg class="position-absolute top-0 start-0 w-100 h-100">
                                        <line x1="0" y1="0" x2="100%" y2="100%" stroke="red" stroke-width="1" />
                                        <line x1="100%" y1="0" x2="0" y2="100%" stroke="red" stroke-width="1" />
                                    </svg>
                                `);
                            } else {
                                cell.find("svg").remove();
                            }

                            dropdown.value = previousValue;
                            updateShiftCount(date);
                        }
                    },
                    error: function () {
                        alert('An error occurred while assigning the shift.');
                    }
                });
            // }
        }

        function updateShiftCount(date) {
            let shiftTypes = ["A", "B", "C"];

            shiftTypes.forEach(shift => {
                let count = $(`select[data-date="${date}"]`).filter(function () {
                    return $(this).find('option:selected').text().trim() === shift;
                }).length;
                let cell = $(`#shift-${shift}-${date}`);

                cell.text(count);

                // Remove previous colors before applying the new one
                removeColorClass(cell);

                // Apply background color based on shift count
                if (count === 0) {
                    cell.addClass("bg-danger-subtle text-danger-emphasis"); // Light red
                } else if (count === 1) {
                    cell.addClass("bg-warning-subtle text-warning-emphasis"); // Light yellow
                } else if (count === 2) {
                    cell.addClass("bg-success-subtle text-success-emphasis"); // Light green
                } else {
                    cell.addClass("bg-success text-white"); // Green
                }
            });
        }

        function getLeave(id) {
            console.log(id);
            $.ajax({
                url: '/Leave/GetLeave',
                type: 'POST',
                data: {
                    Id: id
                },
                success: function (response) {
                    $("#name").text(response.name);
                    $("#leaveType").text(response.leave_type_name);
                    $("#date").text(`${response.date_start} to ${response.date_end}`);
                    $("#comment").text(response.comment);

                    $("#approveBtn").attr("href", `/Leave/Approve/${response.leave_ID}`);
                    $("#denyBtn").attr("href", `/Leave/Deny/${response.leave_ID}`);
                },
                error: function () {
                    alert('An error occurred while assigning the shift.');
                }
            });
            $("#approveModal").modal("show");
        }

        function removeLeaveBg(p) {
            $(p).removeClass("bg-secondary bg-secondary-subtle text-secondary-emphasis");
        }

        function removeColorClass(e) {
            $(e).removeClass("bg-danger-subtle text-danger-emphasis bg-warning-subtle text-warning-emphasis bg-success-subtle text-success-emphasis bg-success text-white");
        }
    </script>
}
