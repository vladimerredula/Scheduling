@using System.Globalization;
@model (List<User> Users, List<Shift> Shifts, List<Schedule> Schedules, List<Leave> Leaves, List<Holiday> Holidays, List<Sector> Sectors, int month, int year)

@{
    var currentYear = Model.year;
    var selectedMonth = Model.month;
    var sectors = ViewBag.Sectors as List<Sector>;
    var daysInMonth = DateTime.DaysInMonth(currentYear, selectedMonth);
    var schedules = Model.Schedules;
    var holidays = Model.Holidays;
    var shifts = Model.Shifts;
    var leaves = Model.Leaves;
    var users = Model.Users;
    var companyHolidayDates = holidays.Where(h => h.Type == "Company").Select(h => h.Date).ToHashSet();
    var userIds = users.Select(u => u.Personnel_ID).ToHashSet();
}

<div class="row">
    <div class="col mb-3">
        <div class="card p-3">
            <div id="loading-spinner" class="position-absolute top-50 start-50 z-3 d-none">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>

            <div class="row justify-content-between mb-3">
                <div class="col-auto">
                    <a class="btn btn-light border" id="prevBtn">
                        <i class="bi bi-arrow-bar-left"></i> Previous
                    </a>
                </div>
                <div class="col">
                    <h3 class="text-center">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(selectedMonth)</h3>
                </div>
                <div class="col-auto">
                    <a class="btn btn-light border" id="nextBtn">
                        Next <i class="bi bi-arrow-bar-right"></i>
                    </a>
                </div>
            </div>

            <div class="table-responsive" style="max-height: calc(100vh - 325px);" id="printableTable">
                <table id="schedule" class="table table-sm table-borderless table-hover m-0" style="border-collapse: separate; border-spacing: 0;">
                    <thead class="text-center sticky-top z-2">
                        <tr>
                            <th class="border border-secondary">Name</th>
                            @for (int day = 1; day <= daysInMonth; day++)
                            {
                                var date = new DateTime(currentYear, selectedMonth, day);
                                var isWeekend = date.DayOfWeek == DayOfWeek.Saturday || date.DayOfWeek == DayOfWeek.Sunday;
                                var holiday = holidays.FirstOrDefault(h => h.Date == date);

                                var holidayClass = holiday != null
                                ? (holiday.Type == "Company" ? "bg-secondary text-white" : "bg-secondary-subtle text-secondary-emphasis")
                                : (isWeekend ? "bg-secondary-subtle text-secondary-emphasis" : "");

                                var holidayPopover = holiday != null
                                ? $"data-bs-toggle='popover' data-bs-placement='top' data-bs-trigger='focus hover' data-bs-content='{holiday.Name}' tabindex='0'"
                                : "";

                                <th class="border border-start-0 border-secondary p-1 @holidayClass" @Html.Raw(holidayPopover)>
                                    <p class="m-0">@day</p>
                                    <small class="fw-light font-monospace">@date.ToString("ddd")</small>
                                </th>
                            }
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var sector in users.GroupBy(u => u.Sector_ID))
                        {
                        <tbody class="sector">
                            <tr class="sectorName">
                                <td class="border-bottom border-secondary pb-1" colspan="@(daysInMonth + 1)">
                                    <small class="fw-bold">
                                            @Model.Sectors?.FirstOrDefault(s => s.Sector_ID == sector.Key)?.Sector_name
                                    </small>
                                </td>
                            </tr>

                                @foreach (var user in sector)
                                {
                                <tr>
                                    <td class="border border-top-0 border-secondary text-nowrap text-start">@user.Full_name</td>

                                        @for (int day = 1; day <= daysInMonth; day++)
                                        {
                                            var date = new DateTime(currentYear, selectedMonth, day);
                                            var dateStr = date.ToString("yyyy-MM-dd");
                                            var isWeekend = date.DayOfWeek == DayOfWeek.Saturday || date.DayOfWeek == DayOfWeek.Sunday;
                                            var schedule = schedules.FirstOrDefault(s => s.Personnel_ID == user.Personnel_ID && s.Date == date);
                                            var shift = shifts.FirstOrDefault(s => s.Shift_ID == (schedule?.Shift_ID ?? 0));
                                            var leave = leaves.FirstOrDefault(l => l.Personnel_ID == user.Personnel_ID && date >= l.Date_start && date <= l.Date_end);
                                            var holiday = holidays.FirstOrDefault(h => h.Date == date);

                                            bool isCompanyHoliday = holiday?.Type == "Company";
                                            string cellClass = holiday != null
                                            ? (isCompanyHoliday ? "bg-secondary text-white" : "bg-secondary-subtle text-secondary-emphasis")
                                            : (isWeekend ? "bg-secondary-subtle text-secondary-emphasis" : "");

                                            string leavePopover = leave != null ? $"data-bs-toggle='popover' data-bs-placement='top' data-bs-trigger='focus hover' data-bs-html='true' data-bs-content='<strong>{leave?.Leave_type?.Leave_type_name}</strong>' tabindex='0'" : "";

                                            string bgClass = leave != null ? "bg-" + leave.Leave_type?.BsColor : "visually-hidden";

                                        <td id="cell-@user.Personnel_ID-@dateStr" class="p-0 @cellClass position-relative border-bottom border-end border-secondary">
                                            <p class="p-1 m-0 text-center">@(isCompanyHoliday || leave != null ? "" : shift?.Shift_name)</p>

                                            <p id="p-@user.Personnel_ID-@dateStr" class="position-absolute m-0 start-0 top-0 w-100 h-100 text-center @bgClass" @Html.Raw(leavePopover) style="z-index: 1;"></p>

                                                @if (schedule?.Comment == "cancelled")
                                                {
                                                <svg class="position-absolute top-0 start-0 w-100 h-100">
                                                    <line x1="0" y1="0" x2="100%" y2="100%" stroke="red" stroke-width="1" />
                                                    <line x1="100%" y1="0" x2="0" y2="100%" stroke="red" stroke-width="1" />
                                                </svg>
                                                }
                                        </td>
                                        }
                                </tr>
                                }
                        </tbody>
                        }
                    </tbody>

                    <tfoot class="sticky-bottom z-2">
                        @foreach (var shift in shifts.Where(s => new[] { "A", "B", "C" }.Contains(s.Shift_name)))
                        {
                            <tr>
                                <td class="border-end border-secondary fw-semibold text-end">Shift @shift.Shift_name</td>
                                @for (int day = 1; day <= daysInMonth; day++)
                                {
                                    var date = new DateTime(currentYear, selectedMonth, day);
                                    var count = schedules.Count(s =>
                                        s.Shift_ID == shift.Shift_ID &&
                                        s.Comment != "cancelled" &&
                                        s.Date == date &&
                                        userIds.Contains(s.Personnel_ID) &&
                                        !companyHolidayDates.Contains(date));

                                    var bgColor = count switch
                                    {
                                        0 => "bg-danger-subtle text-danger-emphasis",
                                        1 => "bg-warning-subtle text-warning-emphasis",
                                        2 => "bg-success-subtle text-success-emphasis",
                                        _ => "bg-success text-white"
                                    };

                                    <td class="border-bottom border-end border-secondary text-center @bgColor" id="shift-@shift.Shift_name-@date.ToString("yyyy-MM-dd")">
                                        @count
                                    </td>
                                }
                            </tr>
                        }
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    <div class="col-12 col-xxl-2" id="legendsAndShifts" style="display:none;">
        <div class="row mb-3">
            <div class="col col-md-6 col-xl-4 col-xxl-12 mb-3">
                <div class="card p-4">
                    <small class="text-body-secondary mb-3">Reflected leaves</small>
                    <small class="mb-2"><span class="bg-primary-subtle border border-2 border-primary-subtle rounded-1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> Business trip</small>
                    <small class="mb-2"><span class="bg-info border border-2 border-info rounded-1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;Paid leave</small>
                    <small class="mb-2"><span class="bg-primary border border-2 border-primary rounded-1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;Unpaid leave</small>
                    <small class="mb-2"><span class="bg-secondary border border-2 border-secondary rounded-1 opacity-75">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;Company holiday</small>
                </div>
            </div>
            @if (Model.Shifts.Where(s => s.Pattern == "4/2") is var shifts4 && shifts4 != null && shifts4.Count() > 0)
            {
                <div class="col col-md-6 col-xl-4 col-xxl-12 mb-3">
                    <div class="card py-2 px-4">
                        <table class="table table-sm text-center mb-3">
                            <thead>
                                <tr>
                                    <th colspan="2">4/2 pattern</th>
                                </tr>
                                <tr>
                                    <th>Shift</th>
                                    <th>Time</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var shift in shifts4)
                                {
                                    <tr>
                                        <td>@shift.Shift_name</td>
                                        <td>@shift.Time_start - @shift.Time_end</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            @if (Model.Shifts.Where(s => s.Pattern == "5/2") is var shifts5 && shifts5 != null && shifts5.Count() > 0)
            {
                <div class="col col-md-6 col-xl-4 col-xxl-12 mb-3">
                    <div class="card py-2 px-4">
                        <table class="table table-sm text-center mb-3">
                            <thead>
                                <tr>
                                    <th colspan="2">5/2 pattern</th>
                                </tr>
                                <tr>
                                    <th>Shift</th>
                                    <th>Time</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var shift in shifts5)
                                {
                                    <tr>
                                        <td>@shift.Shift_name</td>
                                        <td>@shift.Time_start - @shift.Time_end</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>
    </div>
</div>